<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dao.UserDao">

    <resultMap id="customer" type="entity.Customer" autoMapping="true">
        <association property="wallet" javaType="entity.Wallet" resultMap="dao.WalletDao.wallet" />
        <association property="address" javaType="dto.Address" resultMap="dao.AddressDao.address" />
    </resultMap>

    <resultMap id="collector" type="entity.Collector" autoMapping="true">
        <association property="wallet" javaType="entity.Wallet" resultMap="dao.WalletDao.wallet" />
        <association property="address" javaType="dto.Address" resultMap="dao.AddressDao.address" />
    </resultMap>

    <resultMap id="company" type="entity.Company" autoMapping="true">
        <association property="wallet" javaType="entity.Wallet" resultMap="dao.WalletDao.wallet" />
        <association property="address" javaType="dto.Address" resultMap="dao.AddressDao.address" />
    </resultMap>

    <resultMap id="manager" type="entity.Manager" autoMapping="true">
        <association property="address" javaType="dto.Address" resultMap="dao.AddressDao.address" />
    </resultMap>
    
    <sql id="addr_detail_id">
        select id from addr_detail
        where name=#{c.address.detail} AND area_id=(
        (SELECT id FROM area WHERE name=#{c.address.area} AND city_id =
        (SELECT id FROM city WHERE name = #{c.address.city})))
    </sql>

    <insert id="addCustomer" keyProperty="c.id" parameterType="entity.Customer">
        INSERT INTO customer (name, password, gender, phone, addr_detail_id)
        VALUE (#{c.name}, #{c.password}, #{c.gender}, #{c.phone},
        (<include refid="addr_detail_id" />));
    </insert>

    <select id="getCustomerDetails" resultMap="customer">
        SELECT c.id, c.name, c.password, c.image_url, c.gender,
        c.phone, c.credit, c.point, c.experience, w.id as w_id, w.balance as w_balance,
        c.create_time, a.name as address_detail,
        area.name as address_area, city.name as address_city,
        province.name as address_province
        FROM ((((customer c INNER JOIN wallet w ON c.id = w.user_id AND w.user_kind = 0)
        INNER JOIN addr_detail a ON c.addr_detail_id = a.id)
        INNER JOIN area ON a.area_id = area.id)
        INNER JOIN city ON area.city_id = city.id)
        INNER JOIN province ON city.province_id = province.id
        WHERE c.name = #{name}
    </select>

    <update id="updateCustomer" parameterType="entity.Customer">
        UPDATE customer SET
        name = #{c.name}, password = #{c.password}, image_url = #{c.imageUrl},
        gender = #{c.gender}, phone = #{c.phone}, credit = #{c.credit},
        point = #{c.point}, experience = #{c.experience},
        addr_detail_id = (<include refid="addr_detail_id" />)
        WHERE id = #{c.id}
    </update>

    <delete id="deleteCustomer">
        DELETE FROM customer WHERE name = #{name}
    </delete>

    <insert id="addCollector" keyProperty="c.id" parameterType="entity.Collector">
        INSERT INTO collector (name, company_id, password,
        IDCardNo, gender, phone, addr_detail_id)
        VALUE (#{c.name},
        (SELECT id FROM company WHERE name = #{c.companyName}),
        #{c.password}, #{c.IDCardNo}, #{c.gender}, #{c.phone},
        (<include refid="addr_detail_id" />))
    </insert>

    <select id="getCollectorDetails" resultMap="collector">
        SELECT c1.id, c1.name, c2.name as company_name,
        c1.password, c1.image_url, c1.IDCardNo, c1.gender,
        c1.phone, c1.credit, c1.point, c1.experience,w.id as w_id, w.balance as w_balance,
        c1.create_time, a1.name as address_detail,
        a2.name as address_area, c3.name as address_city,
        p.name as address_province
        FROM (((((collector c1 INNER JOIN wallet w ON w.user_id = c1.id AND w.user_kind = 1)
        INNER JOIN company c2 ON c1.company_id = c2.id)
        INNER JOIN addr_detail a1 ON c1.addr_detail_id = a1.id)
        INNER JOIN area a2 ON a1.area_id = a2.id)
        INNER JOIN city c3 ON a2.city_id = c3.id)
        INNER JOIN province p ON c3.province_id = p.id
        WHERE c1.name = #{name}
    </select>

    <update id="updateCollector" parameterType="entity.Collector">
        UPDATE collector SET
        name = #{c.name}, company_id = (SELECT id from company WHERE name = #{c.companyName}),
        password = #{c.password}, image_url = #{c.imageUrl},
        IDCardNo = #{c.IDCardNo}, gender = #{c.gender}, phone = #{c.phone},
        credit = #{c.credit}, point = #{c.point}, experience = #{c.experience},
        addr_detail_id = (<include refid="addr_detail_id" />)
        WHERE id = #{c.id}
    </update>

    <delete id="deleteCollector">
        DELETE FROM collector WHERE name = #{name}
    </delete>

    <insert id="addCompany" keyProperty="c.id" parameterType="entity.Company">
        INSERT INTO company (name, password, phone, addr_detail_id)
        VALUE (#{c.name}, #{c.password}, #{c.phone},
        (<include refid="addr_detail_id" />))
    </insert>

    <select id="getCompanyDetails" resultMap="company">
        SELECT c1.id, c1.name, c1.password, c1.image_url,
        c1.phone, w.id as w_id, w.balance as w_balance, c1.create_time,
        a1.name as address_detail,
        a2.name as address_area, c2.name as address_city,
        p.name as address_province
        FROM ((((company c1 INNER JOIN wallet w ON c1.id = w.user_id AND w.user_kind = 2)
        INNER JOIN addr_detail a1 ON c1.addr_detail_id = a1.id)
        INNER JOIN area a2 ON a1.area_id = a2.id)
        INNER JOIN city c2 ON a2.city_id = c2.id)
        INNER JOIN province p ON c2.province_id = p.id
        WHERE c1.name = #{name}
    </select>

    <update id="updateCompany" parameterType="entity.Company">
        UPDATE company SET
        name = #{c.name}, password = #{c.password}, image_url = #{c.imageUrl},
        phone = #{c.phone},
        addr_detail_id = (<include refid="addr_detail_id" />)
        WHERE id = #{c.id}
    </update>

    <delete id="deleteCompany">
        DELETE FROM company WHERE name = #{name}
    </delete>

    <insert id="addManager" parameterType="entity.Manager">
        INSERT INTO manager(name, password, gender, phone, area_id)
        VALUE (#{c.name}, #{c.password}, #{c.gender}, #{c.phone},
        (SELECT id FROM area WHERE name = #{c.address.area} AND city_id =
        (SELECT id FROM city WHERE name = #{c.address.city})))
    </insert>

    <select id="getManager" resultMap="manager">
        SELECT m.id, m.name, m.password, m.gender, m.image_url,
        m.phone, m.create_time,
        a.name as address_area, c.name as address_city,
        p.name as address_province
        FROM ((manager m
        INNER JOIN area a ON m.area_id = a.id)
        INNER JOIN city c ON a.city_id = c.id)
        INNER JOIN province p ON c.province_id = p.id
        WHERE m.name = #{name};
    </select>

    <update id="updateManager" parameterType="entity.Manager">
        UPDATE manager SET
        name = #{c.name}, password = #{c.password}, gender = #{c.gender},
        image_url = #{c.imageUrl}, phone = #{c.phone},
        area_id = (SELECT id FROM area WHERE name = #{c.address.area} AND city_id =
        (SELECT id FROM city WHERE name = #{c.address.city}))
        where id = #{c.id}
    </update>

    <delete id="deleteManager">
        DELETE FROM manager WHERE name = #{name}
    </delete>

    <select id="getCustomerBasic" resultType="entity.Customer">
        SELECT id, name, password, image_url, gender, phone,
        credit, point, experience FROM customer WHERE name = #{name}
    </select>

    <select id="getCollectorBasic" resultType="entity.Collector">
        SELECT id, name, password, image_url, gender, phone,
        credit, point, experience FROM collector WHERE name = #{name}
    </select>

    <select id="getCompanyBasic" resultType="entity.Company">
        SELECT id, name, password, image_url, phone FROM company WHERE name = #{name}
    </select>

    <select id="getCustomerBasicById" resultType="entity.Customer">
        SELECT id, name, password, image_url, gender, phone,
        credit, point, experience FROM customer WHERE id = #{id}
    </select>

    <select id="getCollectorBasicById" resultType="entity.Collector">
        SELECT id, name, password, image_url, gender, phone,
        credit, point, experience FROM collector WHERE id = #{id}
    </select>

    <select id="getCompanyBasicById" resultType="entity.Company">
        SELECT id, name, password, image_url, phone FROM company WHERE id = #{id}
    </select>

    <select id="getCustomers" resultType="entity.Customer">
        SELECT id, name, password, image_url, gender, phone,
        credit, point, experience, create_time FROM customer
    </select>

    <select id="getCollectors" resultType="entity.Collector">
        SELECT id, name, password, image_url, gender, phone,
        credit, point, experience, create_time FROM collector WHERE id &lt;&gt; 1
    </select>

    <select id="getCompanys" resultType="entity.Company">
        SELECT id, name, password, image_url, phone, create_time FROM company WHERE id &lt;&gt; 1
    </select>

</mapper>